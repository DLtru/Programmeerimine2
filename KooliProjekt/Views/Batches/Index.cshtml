@model KooliProjekt.Models.BatchesIndexModel

<h1>Batch List</h1>

<p>
    <a asp-action="Create">Create New Batch</a>
</p>

<form method="get">
    <div class="form-group">
        <label class="control-label">Search by Keyword</label>
        <input asp-for="Search.Keyword" class="form-control" />
    </div>
    <div class="form-group">
        <label class="control-label">Done</label>
        <select asp-for="Search.Done" class="form-control">
            <option value="">-</option>
            <option value="true">Yes</option>
            <option value="false">No</option>
        </select>
    </div>
    <div class="form-group">
        <button class="btn btn-primary">Search</button>
        <a asp-action="Index" class="btn btn-secondary">Reset</a>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>Code</th>
            <th>Description</th>
            <th>Date</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var batch in Model.Data.Results)
        {
            <tr>
                <td>@batch.Code</td>
                <td>@batch.Description</td>
                <td>@batch.Date.ToShortDateString()</td>
                <td>@(batch.Done ? "Done" : "Not Done")</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@batch.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@batch.Id">View</a> |
                    <a asp-action="Delete" asp-route-id="@batch.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="pagination">
    @if (Model.Data.TotalCount > 0)
    {
        <ul class="pagination">
            @if (Model.Data.PageIndex > 1)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="1">First</a>
                </li>
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="@((Model.Data.PageIndex - 1))">Previous</a>
                </li>
            }

            @for (var i = 1; i <= Model.Data.TotalCount / Model.Data.PageSize + (Model.Data.TotalCount % Model.Data.PageSize > 0 ? 1 : 0); i++)
            {
                <li class="page-item @(i == Model.Data.PageIndex ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
                </li>
            }

            @if (Model.Data.PageIndex < Model.Data.TotalCount / Model.Data.PageSize + (Model.Data.TotalCount % Model.Data.PageSize > 0 ? 1 : 0))
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="@((Model.Data.PageIndex + 1))">Next</a>
                </li>
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="@((Model.Data.TotalCount / Model.Data.PageSize))">Last</a>
                </li>
            }
        </ul>
    }
</div>
